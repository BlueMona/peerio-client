Description: remove windows and osx from the build process
Author: Samuel MARTIN MORO <samuel@peerio.com>
Origin: vendor
Forwarded: not-needed
Last-Update: 2016-08-03
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/gulpfile.js	2016-08-03 12:29:14.678963571 +0200
+++ b/gulpfile.js	2016-08-03 12:40:26.805865305 +0200
@@ -18,19 +18,6 @@
 var localeDest = 'application/locale';
 var usedLangs = 'en,de,es,it,fr,ru,zh_CN,nb_NO,hu,tr,pt_BR,ja,cs';
 var buildDest = 'build/';
-var codesignCommands = ['Contents/MacOS/nwjs', 							// all executables must be signed
-'Contents/Versions/50.0.2661.94/nwjs\\ Helper.app/',
-'Contents/Versions/50.0.2661.94/nwjs\\ Helper.app/Contents/MacOS/nwjs\\ Helper',
-'Contents/Versions/50.0.2661.94/nwjs\\ Framework.framework/Helpers/crashpad_handler',
-'Contents/Versions/50.0.2661.94/nwjs\\ Framework.framework/libffmpeg.dylib',
-'Contents/Versions/50.0.2661.94/nwjs\\ Framework.framework/libnode.dylib',
-'Contents/Versions/50.0.2661.94/nwjs\\ Framework.framework/nwjs\\ Framework',
-''
-];
-
-codesignCommands = _.map(codesignCommands, function(file) {
-    return 'codesign --force --verify --verbose --sign "' + process.env.PEERIO_DEVELOPER_ID + '" '+ buildDest +'Peerio/osx64/Peerio.app/' + file;
-});
 
 /**
 * Fetch json files from Transifex.
@@ -52,7 +39,7 @@
 gulp.task('tempconvert', function() {
     return gulp.src('./application/locale/en.json')
     .pipe(rename(function (path) {
-        path.extname = ".l20n"
+	path.extname = ".l20n"
     }))
     .pipe(replace(/\{|\}/gi, ''))
     .pipe(replace(/"(\w+)": "(.*)",?\s?\n|\r/gi, '<$1 "$2">\n'))
@@ -65,10 +52,10 @@
 gulp.task('convert-i18n', function() {
     return gulp.src(tmpSources)
     .pipe(rename(function (path) {
-        path.basename = path.basename.replace('_', '-')
+	path.basename = path.basename.replace('_', '-')
     }))
     .pipe(rename(function (path) {
-        path.extname = ".l20n"
+	path.extname = ".l20n"
     }))
     .pipe(replace(/\{|\}/gi, ''))
     .pipe(replace(/"(\w+)": "(.*)",?\s?\n|\r/gi, '<$1 "$2">\n'))
@@ -118,7 +105,7 @@
 gulp.task('bump-build' ,function() {
     return gulp.src(['application/build.txt'])
     .pipe(replace(/([0-9]+)/g, function(match, number) {
-        return +number +1;
+	return +number +1;
     }))
     .pipe(gulp.dest('application/'))
 });
@@ -185,113 +172,44 @@
 });
 
 /**
-* Set permissions for Mac
+* Zip the src directory, excluding node_modules.
 */
-gulp.task('finalize-mac-build', shell.task(['chmod -R 755 '+ buildDest +'Peerio/osx64/Peerio.app/']))
-// TODO zip
+gulp.task('finalize-win-build', function(callback) {
+    return gulp.src('application/img/notification.png')
+    .pipe(gulp.dest(buildDest +'Peerio/win32/')); // TODO finalize linux build with this as well
+});
 
-gulp.task('pack-mac-build', function(callback){
-    var package = appdmg({
-        target: buildDest +'Peerio/osx64/Peerio.dmg',
-        basepath: __dirname,
-        specification: {
-            title: "Peerio",
-            icon:"./application/img/nw.icns",
-            background:"./application/img/dmgBackground.png",
-            contents: [
-                { x: 290, y: 180, type: "link", path: "/Applications" },
-                { x: 110, y: 180, type: "file", path: buildDest +'Peerio/osx64/Peerio.app' }
-            ]
-            //window: {size: {width:800, height:600}}
-
-        }});
-        package.on('progress', function (info) {
-            console.log("STEP %s/%s: %s", info.current, info.total, info.title || info.status);
-        });
-
-        package.on('finish', function () {
-            console.log('DMG created!');
-            callback();
-        });
-
-        package.on('error', function (err) {
-            console.error('Failed to create DMG', err);
-            callback();
-        });
-    });
-    /**
-    * Zip the src directory, excluding node_modules.
-    */
-    gulp.task('finalize-win-build', function(callback) {
-        return gulp.src('application/img/notification.png')
-        .pipe(gulp.dest(buildDest +'Peerio/win32/')); // TODO finalize linux build with this as well
-    });
+/**
+* Build the Linux & Chrome packages.
+*/
+gulp.task('build', function(callback) {
 
-    // todo zip mac and windows binaries as well for Github & get md5 and sha1
+    var buildNumber = fs.readFileSync("application/build.txt", "utf8");
 
     /**
-    * Build the Mac, Windows, Linux & Chrome packages.
+    * Generate nwjs packages.
     */
-    gulp.task('build', function(callback) {
-
-        var buildNumber = fs.readFileSync("application/build.txt", "utf8");
-
-        /**
-        * Generate nwjs packages.
-        */
-        var nw = new NwBuilder({
-            files: 'application/**/**', // use the glob format
-            platforms: ['win32','osx64', 'linux64'],
-            buildDir: buildDest,
-            appName: 'Peerio',
-            version: '0.14.4',
-            cacheDir: 'tmp/nw',
-            macIcns: 'application/img/nw.icns',
-            zip: false,
-            macPlist: {
-                'UTTypeReferenceURL': 'https://peerio.com',
-                'CFBundleIdentifier': 'com.peerio.peeriomac',
-                'DTSDKBuild': buildNumber,
-                CFBundleDisplayName: "Peerio",
-                CFBundleName:"Peerio"
-            },
-            macPlistStrings: {
-                en: 'osx/plist_en.strings'
-            },
-            winIco: 'application/img/icon256.ico'				// comment this line if you don't have wine installed
-        });
-
-        runSequence('update-dependendencies', 'clean-build', function() {
-            nw.build()
-            .then(function() {
-                runSequence('finalize-mac-build', 'sign', 'pack-mac-build', 'build-chrome', 'finalize-win-build', callback)
-            })
-            .catch(function (error) {
-                console.error(error);
-                callback();
-            });
-        })
+    var nw = new NwBuilder({
+	files: 'application/**/**', // use the glob format
+	platforms: ['linux32','linux64'],
+	buildDir: buildDest,
+	appName: 'Peerio',
+	version: '0.14.4',
+	cacheDir: 'tmp/nw'
     });
 
-    /**
-    * Sign the Mac package.
-    */
-    gulp.task('sign', shell.task(codesignCommands))
-
-
-    gulp.task('upload')
-
-    /*
-
-    scpClient.scp('local_folder', {
-    "host": "remote_host",
-    "port": "remote_port",
-    "username": "username_on_remote",
-    "path": "/path/on/remote",
-    "agent": process.env["SSH_AUTH_SOCK"],
-    "agentForward": true
-}, cb)
+    runSequence('update-dependendencies', 'clean-build', function() {
+	nw.build()
+	.then(function() {
+	    runSequence(callback)
+	})
+	.catch(function (error) {
+	    console.error(error);
+	    callback();
+	});
+    })
+});
 
-*/
+gulp.task('upload')
 
 gulp.task('watch', shell.task('babel application/jsx --plugins transform-react-jsx --watch --out-dir application/js/peerio/ui'))
